{"version":3,"file":"main-COolqo2s.js","sources":["../../../node_modules/svelte/src/version.js","../../../node_modules/svelte/src/internal/disclose-version.js","../../../node_modules/svelte/src/internal/flags/legacy.js","../../../src/lib/components/ui/Button.svelte","../../../src/lib/components/ui/Card.svelte","../../../src/lib/components/ui/StatusIndicator.svelte","../../../src/lib/stores/theme.ts","../../../src/lib/components/ui/ThemeToggle.svelte","../../../src/lib/services/websocket/WebSocketClient.ts","../../../src/lib/config/api.ts","../../../src/lib/stores/websocket/hackrf.ts","../../../src/apps/hackrf/components/spectrum/SpectrumDisplay.svelte","../../../src/apps/hackrf/components/spectrum/WaterfallDisplay.svelte","../../../src/apps/hackrf/components/controls/FrequencyControls.svelte","../../../src/apps/hackrf/components/detection/SignalDetectionList.svelte","../../../src/apps/hackrf/App.svelte","../../../src/apps/hackrf/main.ts"],"sourcesContent":["// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.34.7';\nexport const PUBLIC_VERSION = '5';\n","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","import { enable_legacy_mode_flag } from './index.js';\n\nenable_legacy_mode_flag();\n","<script lang=\"ts\">\n  import type { HTMLButtonAttributes } from 'svelte/elements';\n  \n  interface ButtonProps extends HTMLButtonAttributes {\n    variant?: 'primary' | 'secondary' | 'outline' | 'ghost' | 'danger';\n    size?: 'sm' | 'md' | 'lg';\n    disabled?: boolean;\n    class?: string;\n  }\n  \n  let {\n    variant = 'primary',\n    size = 'md',\n    disabled = false,\n    class: className = '',\n    children,\n    ...restProps\n  }: ButtonProps = $props();\n  \n  const variantClasses = {\n    primary: 'bg-primary-600 text-white hover:bg-primary-700 dark:bg-primary-500 dark:hover:bg-primary-600',\n    secondary: 'bg-secondary-600 text-white hover:bg-secondary-700 dark:bg-secondary-500 dark:hover:bg-secondary-600',\n    outline: 'border-2 border-surface-300 text-surface-700 hover:bg-surface-100 dark:border-surface-600 dark:text-surface-300 dark:hover:bg-surface-800',\n    ghost: 'text-surface-700 hover:bg-surface-100 dark:text-surface-300 dark:hover:bg-surface-800',\n    danger: 'bg-error text-white hover:bg-red-700'\n  };\n  \n  const sizeClasses = {\n    sm: 'px-3 py-1.5 text-sm',\n    md: 'px-4 py-2 text-base',\n    lg: 'px-6 py-3 text-lg'\n  };\n  \n  const baseClasses = 'inline-flex items-center justify-center font-medium rounded-md transition-colors duration-200 focus-ring disabled:opacity-50 disabled:cursor-not-allowed';\n  \n  const buttonClasses = $derived(`${baseClasses} ${variantClasses[variant]} ${sizeClasses[size]} ${className}`);\n</script>\n\n<button\n  class={buttonClasses}\n  {disabled}\n  {...restProps}\n>\n  {@render children?.()}\n</button>","<script lang=\"ts\">\n  import type { HTMLAttributes } from 'svelte/elements';\n  \n  interface CardProps extends HTMLAttributes<HTMLDivElement> {\n    variant?: 'default' | 'elevated' | 'bordered';\n    padding?: 'none' | 'sm' | 'md' | 'lg';\n    class?: string;\n  }\n  \n  let {\n    variant = 'default',\n    padding = 'md',\n    class: className = '',\n    children,\n    ...restProps\n  }: CardProps = $props();\n  \n  const variantClasses = {\n    default: 'bg-surface-100 dark:bg-surface-800',\n    elevated: 'bg-surface-100 dark:bg-surface-800 shadow-lg',\n    bordered: 'bg-surface-50 dark:bg-surface-900 border border-surface-300 dark:border-surface-700'\n  };\n  \n  const paddingClasses = {\n    none: '',\n    sm: 'p-3',\n    md: 'p-6',\n    lg: 'p-8'\n  };\n  \n  const baseClasses = 'rounded-lg transition-colors duration-200';\n  \n  const cardClasses = $derived(`${baseClasses} ${variantClasses[variant]} ${paddingClasses[padding]} ${className}`);\n</script>\n\n<div\n  class={cardClasses}\n  {...restProps}\n>\n  {@render children?.()}\n</div>","<script lang=\"ts\">\n  import type { HTMLAttributes } from 'svelte/elements';\n  \n  interface StatusIndicatorProps extends HTMLAttributes<HTMLDivElement> {\n    status: 'online' | 'offline' | 'warning' | 'error' | 'idle';\n    size?: 'sm' | 'md' | 'lg';\n    showLabel?: boolean;\n    label?: string;\n    pulse?: boolean;\n    class?: string;\n  }\n  \n  let {\n    status,\n    size = 'md',\n    showLabel = false,\n    label = '',\n    pulse = true,\n    class: className = '',\n    ...restProps\n  }: StatusIndicatorProps = $props();\n  \n  const statusColors = {\n    online: 'bg-success',\n    offline: 'bg-surface-400',\n    warning: 'bg-warning',\n    error: 'bg-error',\n    idle: 'bg-info'\n  };\n  \n  const sizeClasses = {\n    sm: 'w-2 h-2',\n    md: 'w-3 h-3',\n    lg: 'w-4 h-4'\n  };\n  \n  const statusLabels = {\n    online: 'Online',\n    offline: 'Offline',\n    warning: 'Warning',\n    error: 'Error',\n    idle: 'Idle'\n  };\n  \n  const displayLabel = $derived(label || statusLabels[status]);\n  const shouldPulse = $derived(pulse && (status === 'online' || status === 'warning'));\n</script>\n\n<div\n  class=\"inline-flex items-center gap-2 {className}\"\n  {...restProps}\n>\n  <span\n    class=\"rounded-full {statusColors[status]} {sizeClasses[size]}\"\n    class:animate-pulse-subtle={shouldPulse}\n  ></span>\n  {#if showLabel}\n    <span class=\"text-sm text-surface-700 dark:text-surface-300\">\n      {displayLabel}\n    </span>\n  {/if}\n</div>","import { writable, derived } from 'svelte/store';\n\nexport type Theme = 'light' | 'dark' | 'system';\n\n// Get initial theme from localStorage or default to system\nfunction getInitialTheme(): Theme {\n  if (typeof window === 'undefined') return 'system';\n  \n  const stored = localStorage.getItem('theme') as Theme;\n  if (stored && ['light', 'dark', 'system'].includes(stored)) {\n    return stored;\n  }\n  \n  return 'system';\n}\n\n// Create the theme store\nexport const theme = writable<Theme>(getInitialTheme());\n\n// Subscribe to theme changes and update localStorage + document class\ntheme.subscribe((value) => {\n  if (typeof window === 'undefined') return;\n  \n  localStorage.setItem('theme', value);\n  updateDocumentTheme(value);\n});\n\n// Derived store for the actual theme (resolving 'system' to light/dark)\nexport const resolvedTheme = derived(theme, ($theme) => {\n  if ($theme !== 'system') return $theme;\n  \n  if (typeof window === 'undefined') return 'light';\n  \n  return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n});\n\n// Update document class based on theme\nfunction updateDocumentTheme(theme: Theme) {\n  if (typeof document === 'undefined') return;\n  \n  const isDark = theme === 'dark' || \n    (theme === 'system' && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  \n  if (isDark) {\n    document.documentElement.classList.add('dark');\n  } else {\n    document.documentElement.classList.remove('dark');\n  }\n}\n\n// Listen for system theme changes\nif (typeof window !== 'undefined') {\n  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {\n    theme.update((currentTheme) => {\n      if (currentTheme === 'system') {\n        updateDocumentTheme('system');\n      }\n      return currentTheme;\n    });\n  });\n}\n\n// Initialize theme on load\nif (typeof window !== 'undefined') {\n  updateDocumentTheme(getInitialTheme());\n}","<script lang=\"ts\">\n  import { theme, type Theme } from '$lib/stores/theme';\n  import Button from './Button.svelte';\n  \n  interface ThemeToggleProps {\n    showLabel?: boolean;\n    variant?: 'button' | 'dropdown';\n  }\n  \n  let {\n    showLabel = false,\n    variant = 'button'\n  }: ThemeToggleProps = $props();\n  \n  let showDropdown = $state(false);\n  \n  const themes: { value: Theme; label: string; icon: string }[] = [\n    { value: 'light', label: 'Light', icon: '☀️' },\n    { value: 'dark', label: 'Dark', icon: '🌙' },\n    { value: 'system', label: 'System', icon: '💻' }\n  ];\n  \n  function cycleTheme() {\n    theme.update((current) => {\n      const currentIndex = themes.findIndex(t => t.value === current);\n      const nextIndex = (currentIndex + 1) % themes.length;\n      return themes[nextIndex]!.value;\n    });\n  }\n  \n  function selectTheme(newTheme: Theme) {\n    theme.set(newTheme);\n    showDropdown = false;\n  }\n  \n  const currentTheme = $derived(themes.find(t => t.value === $theme) || themes[2]!);\n</script>\n\n{#if variant === 'button'}\n  <Button\n    variant=\"ghost\"\n    size=\"sm\"\n    onclick={cycleTheme}\n    aria-label=\"Toggle theme\"\n  >\n    <span class=\"text-lg\">{currentTheme.icon}</span>\n    {#if showLabel}\n      <span class=\"ml-2\">{currentTheme.label}</span>\n    {/if}\n  </Button>\n{:else}\n  <div class=\"relative\">\n    <Button\n      variant=\"ghost\"\n      size=\"sm\"\n      onclick={() => showDropdown = !showDropdown}\n      aria-label=\"Select theme\"\n      aria-expanded={showDropdown}\n    >\n      <span class=\"text-lg\">{currentTheme.icon}</span>\n      {#if showLabel}\n        <span class=\"ml-2\">{currentTheme.label}</span>\n      {/if}\n      <svg\n        class=\"w-4 h-4 ml-2\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n      >\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width=\"2\"\n          d=\"M19 9l-7 7-7-7\"\n        />\n      </svg>\n    </Button>\n    \n    {#if showDropdown}\n      <div class=\"absolute right-0 mt-2 w-36 rounded-md shadow-lg bg-surface-100 dark:bg-surface-800 ring-1 ring-surface-200 dark:ring-surface-700 z-50\">\n        <div class=\"py-1\">\n          {#each themes as themeOption}\n            <button\n              class=\"flex items-center w-full px-4 py-2 text-sm text-surface-700 dark:text-surface-300 hover:bg-surface-200 dark:hover:bg-surface-700 transition-colors\"\n              class:bg-surface-200={$theme === themeOption.value}\n              class:dark:bg-surface-700={$theme === themeOption.value}\n              onclick={() => selectTheme(themeOption.value)}\n            >\n              <span class=\"text-lg mr-2\">{themeOption.icon}</span>\n              {themeOption.label}\n            </button>\n          {/each}\n        </div>\n      </div>\n    {/if}\n  </div>\n{/if}","import { io, Socket } from 'socket.io-client'\nimport type { WebSocketMessage } from '$shared/types'\n\nexport interface WebSocketConfig {\n  url: string\n  autoConnect?: boolean\n  reconnection?: boolean\n  reconnectionAttempts?: number\n  reconnectionDelay?: number\n  reconnectionDelayMax?: number\n  timeout?: number\n  transports?: string[]\n  path?: string\n  extraHeaders?: Record<string, string>\n}\n\nexport interface WebSocketEvents<T = unknown> {\n  onConnect?: () => void\n  onDisconnect?: (reason: string) => void\n  onError?: (error: Error) => void\n  onMessage?: (message: WebSocketMessage<T>) => void\n  onReconnectAttempt?: (attempt: number) => void\n  onReconnectFailed?: () => void\n  onReconnect?: (attempt: number) => void\n}\n\nexport class WebSocketClient<T = unknown> {\n  private socket: Socket | null = null\n  private config: Required<WebSocketConfig>\n  private events: WebSocketEvents<T>\n  private reconnectTimer: NodeJS.Timeout | null = null\n  private isManuallyDisconnected = false\n  \n  constructor(config: WebSocketConfig, events: WebSocketEvents<T> = {}) {\n    this.config = {\n      autoConnect: true,\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000,\n      reconnectionDelayMax: 5000,\n      timeout: 20000,\n      transports: ['websocket', 'polling'],\n      path: '/socket.io/',\n      extraHeaders: {},\n      ...config\n    }\n    this.events = events\n    \n    if (this.config.autoConnect) {\n      this.connect()\n    }\n  }\n  \n  connect(): void {\n    if (this.socket?.connected) {\n      console.warn('WebSocket already connected')\n      return\n    }\n    \n    this.isManuallyDisconnected = false\n    \n    try {\n      this.socket = io(this.config.url, {\n        reconnection: this.config.reconnection,\n        reconnectionAttempts: this.config.reconnectionAttempts,\n        reconnectionDelay: this.config.reconnectionDelay,\n        reconnectionDelayMax: this.config.reconnectionDelayMax,\n        timeout: this.config.timeout,\n        transports: this.config.transports,\n        path: this.config.path,\n        extraHeaders: this.config.extraHeaders\n      })\n      \n      this.setupEventHandlers()\n    } catch (error) {\n      this.handleError(error as Error)\n    }\n  }\n  \n  disconnect(): void {\n    this.isManuallyDisconnected = true\n    \n    if (this.reconnectTimer) {\n      clearTimeout(this.reconnectTimer)\n      this.reconnectTimer = null\n    }\n    \n    if (this.socket) {\n      this.socket.disconnect()\n      this.socket = null\n    }\n  }\n  \n  send(type: string, payload: T): void {\n    if (!this.socket?.connected) {\n      throw new Error('WebSocket is not connected')\n    }\n    \n    const message: WebSocketMessage<T> = {\n      type,\n      payload,\n      timestamp: Date.now()\n    }\n    \n    this.socket.emit('message', message)\n  }\n  \n  emit(event: string, data?: unknown): void {\n    if (!this.socket?.connected) {\n      throw new Error('WebSocket is not connected')\n    }\n    \n    this.socket.emit(event, data)\n  }\n  \n  on(event: string, handler: (...args: unknown[]) => void): void {\n    if (!this.socket) {\n      throw new Error('WebSocket is not initialized')\n    }\n    \n    this.socket.on(event, handler)\n  }\n  \n  off(event: string, handler?: (...args: unknown[]) => void): void {\n    if (!this.socket) {\n      return\n    }\n    \n    if (handler) {\n      this.socket.off(event, handler)\n    } else {\n      this.socket.off(event)\n    }\n  }\n  \n  get isConnected(): boolean {\n    return this.socket?.connected ?? false\n  }\n  \n  get id(): string | undefined {\n    return this.socket?.id\n  }\n  \n  private setupEventHandlers(): void {\n    if (!this.socket) return\n    \n    this.socket.on('connect', () => {\n      console.log(`WebSocket connected to ${this.config.url}`)\n      this.events.onConnect?.()\n    })\n    \n    this.socket.on('disconnect', (reason: string) => {\n      console.log(`WebSocket disconnected from ${this.config.url}: ${reason}`)\n      this.events.onDisconnect?.(reason)\n      \n      if (!this.isManuallyDisconnected && this.config.reconnection) {\n        this.handleReconnection()\n      }\n    })\n    \n    this.socket.on('connect_error', (error: Error) => {\n      this.handleError(error)\n    })\n    \n    this.socket.on('message', (message: WebSocketMessage<T>) => {\n      this.events.onMessage?.(message)\n    })\n    \n    this.socket.io.on('reconnect_attempt', (attempt: number) => {\n      console.log(`Reconnection attempt ${attempt} to ${this.config.url}`)\n      this.events.onReconnectAttempt?.(attempt)\n    })\n    \n    this.socket.io.on('reconnect_failed', () => {\n      console.error(`Failed to reconnect to ${this.config.url}`)\n      this.events.onReconnectFailed?.()\n    })\n    \n    this.socket.io.on('reconnect', (attempt: number) => {\n      console.log(`Reconnected to ${this.config.url} after ${attempt} attempts`)\n      this.events.onReconnect?.(attempt)\n    })\n  }\n  \n  private handleError(error: Error): void {\n    console.error(`WebSocket error for ${this.config.url}:`, error)\n    this.events.onError?.(error)\n  }\n  \n  private handleReconnection(): void {\n    // Socket.IO handles reconnection internally with exponential backoff\n    // This method is here for any custom reconnection logic if needed\n    console.log(`Attempting to reconnect to ${this.config.url}`)\n  }\n  \n  destroy(): void {\n    this.disconnect()\n    this.events = {}\n  }\n}\n\nexport default WebSocketClient","/**\n * API Configuration Helper\n * \n * Provides centralized configuration for API endpoints.\n * In production, uses relative URLs for same-origin deployment.\n * In development, uses environment variables or defaults to localhost.\n */\n\nconst isDev = import.meta.env.DEV\nconst isProd = import.meta.env.PROD\n\n// Base URLs from environment or defaults\nconst API_BASE = import.meta.env.VITE_API_BASE_URL || ''\nconst WS_BASE = import.meta.env.VITE_WS_BASE_URL || ''\n\n// Service ports\nconst HACKRF_PORT = import.meta.env.VITE_HACKRF_PORT || '8092'\nconst WIGLE_PORT = import.meta.env.VITE_WIGLE_PORT || '8000'\nconst KISMET_PORT = import.meta.env.VITE_KISMET_PORT || '2501'\n\n// Build service URLs\nfunction buildServiceUrl(port: string, protocol: 'http' | 'ws' = 'http'): string {\n  if (isProd && !API_BASE) {\n    // Production with same-origin - use relative URLs\n    const location = typeof window !== 'undefined' ? window.location : null\n    if (location) {\n      const host = location.hostname\n      const scheme = protocol === 'ws' \n        ? (location.protocol === 'https:' ? 'wss:' : 'ws:')\n        : location.protocol\n      return `${scheme}//${host}:${port}`\n    }\n    // Fallback for SSR\n    return ''\n  }\n  \n  // Development or custom base URL\n  const base = protocol === 'ws' ? (WS_BASE || `ws://localhost`) : (API_BASE || `http://localhost`)\n  return `${base}:${port}`\n}\n\nexport const apiConfig = {\n  hackrf: {\n    http: buildServiceUrl(HACKRF_PORT, 'http'),\n    ws: buildServiceUrl(HACKRF_PORT, 'ws'),\n    api: '/api/hackrf'\n  },\n  wigle: {\n    http: buildServiceUrl(WIGLE_PORT, 'http'),\n    ws: buildServiceUrl(WIGLE_PORT, 'ws'),\n    api: '/api'\n  },\n  kismet: {\n    http: buildServiceUrl(KISMET_PORT, 'http'),\n    ws: buildServiceUrl(KISMET_PORT, 'ws'),\n    api: '/api'\n  }\n}\n\n// Helper to get WebSocket URL for a service\nexport function getWebSocketUrl(service: 'hackrf' | 'wigle' | 'kismet'): string {\n  return apiConfig[service].ws\n}\n\n// Helper to get HTTP API URL for a service\nexport function getApiUrl(service: 'hackrf' | 'wigle' | 'kismet'): string {\n  return apiConfig[service].http\n}","import { writable, derived } from 'svelte/store'\nimport { WebSocketClient } from '$lib/services/websocket/WebSocketClient'\nimport { getWebSocketUrl } from '$lib/config/api'\nimport type { \n  HackRFMessage, \n  SpectrumData, \n  HackRFStatus,\n  WebSocketState \n} from '$lib/services/websocket/types'\n\n// Connection state store\nconst connectionState = writable<WebSocketState>({\n  connected: false,\n  connecting: false,\n  error: null,\n  lastConnected: null,\n  reconnectAttempts: 0\n})\n\n// HackRF data stores\nconst spectrumData = writable<SpectrumData | null>(null)\nconst hackrfStatus = writable<HackRFStatus | null>(null)\nconst signalHistory = writable<SpectrumData[]>([])\n\n// WebSocket client instance\nlet wsClient: WebSocketClient<HackRFMessage> | null = null\n\n// Initialize WebSocket connection\nexport function connectHackRF(url?: string): void {\n  const wsUrl = url || getWebSocketUrl('hackrf')\n  if (wsClient?.isConnected) {\n    console.warn('HackRF WebSocket already connected')\n    return\n  }\n  \n  connectionState.update(state => ({ ...state, connecting: true, error: null }))\n  \n  wsClient = new WebSocketClient<HackRFMessage>(\n    {\n      url: wsUrl,\n      path: '/socket.io/',\n      reconnection: true,\n      reconnectionAttempts: 10,\n      reconnectionDelay: 2000,\n      reconnectionDelayMax: 10000\n    },\n    {\n      onConnect: () => {\n        connectionState.update(state => ({\n          ...state,\n          connected: true,\n          connecting: false,\n          lastConnected: new Date(),\n          reconnectAttempts: 0\n        }))\n      },\n      \n      onDisconnect: (reason) => {\n        connectionState.update(state => ({\n          ...state,\n          connected: false,\n          connecting: false\n        }))\n      },\n      \n      onError: (error) => {\n        connectionState.update(state => ({\n          ...state,\n          error,\n          connecting: false\n        }))\n      },\n      \n      onMessage: (message) => {\n        handleHackRFMessage(message as HackRFMessage)\n      },\n      \n      onReconnectAttempt: (attempt) => {\n        connectionState.update(state => ({\n          ...state,\n          connecting: true,\n          reconnectAttempts: attempt\n        }))\n      }\n    }\n  )\n}\n\n// Disconnect WebSocket\nexport function disconnectHackRF(): void {\n  if (wsClient) {\n    wsClient.disconnect()\n    wsClient = null\n  }\n  \n  connectionState.set({\n    connected: false,\n    connecting: false,\n    error: null,\n    lastConnected: null,\n    reconnectAttempts: 0\n  })\n}\n\n// Handle incoming messages\nfunction handleHackRFMessage(message: HackRFMessage): void {\n  switch (message.type) {\n    case 'spectrum':\n      const spectrum = message.payload as SpectrumData\n      spectrumData.set(spectrum)\n      \n      // Update signal history (keep last 100 samples)\n      signalHistory.update(history => {\n        const newHistory = [...history, spectrum]\n        return newHistory.slice(-100)\n      })\n      break\n      \n    case 'status':\n      hackrfStatus.set(message.payload as HackRFStatus)\n      break\n      \n    case 'error':\n      console.error('HackRF error:', message.payload)\n      connectionState.update(state => ({\n        ...state,\n        error: new Error(String(message.payload))\n      }))\n      break\n      \n    default:\n      console.log('Unknown HackRF message type:', message.type)\n  }\n}\n\n// Send configuration update\nexport function updateHackRFConfig(config: Partial<HackRFStatus>): void {\n  if (!wsClient?.isConnected) {\n    throw new Error('HackRF WebSocket not connected')\n  }\n  \n  wsClient.emit('config_update', config)\n}\n\n// Derived stores\nexport const isConnected = derived(connectionState, $state => $state.connected)\nexport const isConnecting = derived(connectionState, $state => $state.connecting)\nexport const connectionError = derived(connectionState, $state => $state.error)\n\n// Export stores\nexport {\n  connectionState,\n  spectrumData,\n  hackrfStatus,\n  signalHistory\n}","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte'\n  import { spectrumData } from '$lib/stores/websocket/hackrf'\n  import type { SpectrumData } from '$lib/services/websocket/types'\n  \n  export let width = 800\n  export let height = 300\n  export let minDb = -120\n  export let maxDb = -20\n  export let gridLines = true\n  export let smoothing = 0.7\n  \n  let canvas: HTMLCanvasElement\n  let ctx: CanvasRenderingContext2D | null\n  let animationFrameId: number\n  let previousMagnitudes: number[] = []\n  \n  // Color scheme\n  const backgroundColor = '#0f0f0f'\n  const gridColor = '#333333'\n  const spectrumColor = '#00ff00'\n  const peakHoldColor = '#ff0000'\n  const textColor = '#888888'\n  \n  // Peak hold\n  let peakHold: number[] = []\n  let peakHoldDecay = 0.95\n  \n  onMount(() => {\n    ctx = canvas.getContext('2d')\n    if (!ctx) return\n    \n    // Set canvas size with device pixel ratio for sharp rendering\n    const dpr = window.devicePixelRatio || 1\n    canvas.width = width * dpr\n    canvas.height = height * dpr\n    canvas.style.width = `${width}px`\n    canvas.style.height = `${height}px`\n    ctx.scale(dpr, dpr)\n    \n    // Start render loop\n    render()\n  })\n  \n  onDestroy(() => {\n    if (animationFrameId) {\n      cancelAnimationFrame(animationFrameId)\n    }\n  })\n  \n  function render() {\n    if (!ctx) return\n    \n    // Clear canvas\n    ctx.fillStyle = backgroundColor\n    ctx.fillRect(0, 0, width, height)\n    \n    // Draw grid\n    if (gridLines) {\n      drawGrid()\n    }\n    \n    // Draw spectrum\n    const data = $spectrumData\n    if (data) {\n      drawSpectrum(data)\n      drawFrequencyLabels(data)\n    }\n    \n    animationFrameId = requestAnimationFrame(render)\n  }\n  \n  function drawGrid() {\n    if (!ctx) return\n    \n    ctx.strokeStyle = gridColor\n    ctx.lineWidth = 0.5\n    \n    // Horizontal lines (dB levels)\n    const dbStep = 20\n    for (let db = minDb; db <= maxDb; db += dbStep) {\n      const y = dbToY(db)\n      ctx.beginPath()\n      ctx.moveTo(0, y)\n      ctx.lineTo(width, y)\n      ctx.stroke()\n      \n      // Label\n      ctx.fillStyle = textColor\n      ctx.font = '10px monospace'\n      ctx.fillText(`${db} dB`, 5, y - 2)\n    }\n    \n    // Vertical lines (frequency divisions)\n    const freqDivisions = 10\n    for (let i = 0; i <= freqDivisions; i++) {\n      const x = (width / freqDivisions) * i\n      ctx.beginPath()\n      ctx.moveTo(x, 0)\n      ctx.lineTo(x, height)\n      ctx.stroke()\n    }\n  }\n  \n  function drawSpectrum(data: SpectrumData) {\n    if (!ctx || !data.magnitude || data.magnitude.length === 0) return\n    \n    const magnitudes = data.magnitude\n    const binWidth = width / magnitudes.length\n    \n    // Smooth the spectrum data\n    if (previousMagnitudes.length === magnitudes.length) {\n      for (let i = 0; i < magnitudes.length; i++) {\n        magnitudes[i] = magnitudes[i] * (1 - smoothing) + previousMagnitudes[i] * smoothing\n      }\n    }\n    previousMagnitudes = [...magnitudes]\n    \n    // Update peak hold\n    if (peakHold.length !== magnitudes.length) {\n      peakHold = [...magnitudes]\n    } else {\n      for (let i = 0; i < magnitudes.length; i++) {\n        if (magnitudes[i] > peakHold[i]) {\n          peakHold[i] = magnitudes[i]\n        } else {\n          peakHold[i] *= peakHoldDecay\n        }\n      }\n    }\n    \n    // Draw peak hold line\n    ctx.strokeStyle = peakHoldColor\n    ctx.lineWidth = 1\n    ctx.globalAlpha = 0.5\n    ctx.beginPath()\n    for (let i = 0; i < peakHold.length; i++) {\n      const x = i * binWidth + binWidth / 2\n      const y = dbToY(peakHold[i])\n      if (i === 0) {\n        ctx.moveTo(x, y)\n      } else {\n        ctx.lineTo(x, y)\n      }\n    }\n    ctx.stroke()\n    ctx.globalAlpha = 1\n    \n    // Draw spectrum line\n    ctx.strokeStyle = spectrumColor\n    ctx.lineWidth = 2\n    ctx.shadowBlur = 10\n    ctx.shadowColor = spectrumColor\n    \n    ctx.beginPath()\n    for (let i = 0; i < magnitudes.length; i++) {\n      const x = i * binWidth + binWidth / 2\n      const y = dbToY(magnitudes[i])\n      if (i === 0) {\n        ctx.moveTo(x, y)\n      } else {\n        ctx.lineTo(x, y)\n      }\n    }\n    ctx.stroke()\n    \n    // Fill area under spectrum\n    ctx.lineTo(width, height)\n    ctx.lineTo(0, height)\n    ctx.closePath()\n    ctx.fillStyle = spectrumColor\n    ctx.globalAlpha = 0.1\n    ctx.fill()\n    ctx.globalAlpha = 1\n    ctx.shadowBlur = 0\n  }\n  \n  function drawFrequencyLabels(data: SpectrumData) {\n    if (!ctx) return\n    \n    const startFreq = data.centerFrequency - data.sampleRate / 2\n    const endFreq = data.centerFrequency + data.sampleRate / 2\n    const freqRange = endFreq - startFreq\n    \n    ctx.fillStyle = textColor\n    ctx.font = '10px monospace'\n    \n    // Draw frequency labels\n    const numLabels = 5\n    for (let i = 0; i <= numLabels; i++) {\n      const x = (width / numLabels) * i\n      const freq = startFreq + (freqRange / numLabels) * i\n      const label = formatFrequency(freq)\n      \n      const textWidth = ctx.measureText(label).width\n      ctx.fillText(label, x - textWidth / 2, height - 5)\n    }\n  }\n  \n  function dbToY(db: number): number {\n    const normalized = (db - minDb) / (maxDb - minDb)\n    return height - (normalized * height)\n  }\n  \n  function formatFrequency(hz: number): string {\n    if (hz >= 1e9) {\n      return `${(hz / 1e9).toFixed(3)} GHz`\n    } else if (hz >= 1e6) {\n      return `${(hz / 1e6).toFixed(3)} MHz`\n    } else if (hz >= 1e3) {\n      return `${(hz / 1e3).toFixed(3)} kHz`\n    }\n    return `${hz.toFixed(0)} Hz`\n  }\n</script>\n\n<div class=\"spectrum-display\">\n  <canvas\n    bind:this={canvas}\n    style=\"width: {width}px; height: {height}px;\"\n  />\n</div>\n\n<style>\n  .spectrum-display {\n    position: relative;\n    background: #0f0f0f;\n    border: 1px solid #333;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n  \n  canvas {\n    display: block;\n  }\n</style>","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte'\n  import { spectrumData } from '$lib/stores/websocket/hackrf'\n  import type { SpectrumData } from '$lib/services/websocket/types'\n  \n  export let width = 800\n  export let height = 400\n  export let minDb = -120\n  export let maxDb = -20\n  export let colormap: 'viridis' | 'plasma' | 'inferno' | 'turbo' = 'turbo'\n  export let scrollSpeed = 2\n  \n  let canvas: HTMLCanvasElement\n  let ctx: CanvasRenderingContext2D | null\n  let offscreenCanvas: HTMLCanvasElement\n  let offscreenCtx: CanvasRenderingContext2D | null\n  \n  // Color maps for different visualizations\n  const colormaps = {\n    viridis: generateViridisColormap(),\n    plasma: generatePlasmaColormap(),\n    inferno: generateInfernoColormap(),\n    turbo: generateTurboColormap()\n  }\n  \n  onMount(() => {\n    ctx = canvas.getContext('2d', { alpha: false })\n    if (!ctx) return\n    \n    // Set canvas size with device pixel ratio\n    const dpr = window.devicePixelRatio || 1\n    canvas.width = width * dpr\n    canvas.height = height * dpr\n    canvas.style.width = `${width}px`\n    canvas.style.height = `${height}px`\n    ctx.scale(dpr, dpr)\n    \n    // Create offscreen canvas for waterfall data\n    offscreenCanvas = document.createElement('canvas')\n    offscreenCanvas.width = width\n    offscreenCanvas.height = height\n    offscreenCtx = offscreenCanvas.getContext('2d', { alpha: false })\n    \n    // Initialize with black\n    if (offscreenCtx) {\n      offscreenCtx.fillStyle = '#000000'\n      offscreenCtx.fillRect(0, 0, width, height)\n    }\n  })\n  \n  onDestroy(() => {\n    // Cleanup\n  })\n  \n  // React to spectrum data updates\n  $: if ($spectrumData && ctx && offscreenCtx) {\n    updateWaterfall($spectrumData)\n  }\n  \n  function updateWaterfall(data: SpectrumData) {\n    if (!ctx || !offscreenCtx || !data.magnitude || data.magnitude.length === 0) return\n    \n    // Shift existing waterfall data down\n    const imageData = offscreenCtx.getImageData(0, 0, width, height - scrollSpeed)\n    offscreenCtx.putImageData(imageData, 0, scrollSpeed)\n    \n    // Draw new spectrum line at top\n    const magnitudes = data.magnitude\n    const binWidth = width / magnitudes.length\n    const colorMap = colormaps[colormap]\n    \n    for (let i = 0; i < magnitudes.length; i++) {\n      const magnitude = magnitudes[i]\n      const normalized = (magnitude - minDb) / (maxDb - minDb)\n      const colorIndex = Math.floor(Math.max(0, Math.min(255, normalized * 255)))\n      const color = colorMap[colorIndex]\n      \n      offscreenCtx.fillStyle = color\n      offscreenCtx.fillRect(i * binWidth, 0, Math.ceil(binWidth), scrollSpeed)\n    }\n    \n    // Copy to main canvas\n    ctx.drawImage(offscreenCanvas, 0, 0)\n    \n    // Draw frequency scale overlay\n    drawFrequencyScale(data)\n  }\n  \n  function drawFrequencyScale(data: SpectrumData) {\n    if (!ctx) return\n    \n    const startFreq = data.centerFrequency - data.sampleRate / 2\n    const endFreq = data.centerFrequency + data.sampleRate / 2\n    const freqRange = endFreq - startFreq\n    \n    // Semi-transparent background for labels\n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)'\n    ctx.fillRect(0, height - 20, width, 20)\n    \n    ctx.fillStyle = '#ffffff'\n    ctx.font = '10px monospace'\n    ctx.textAlign = 'center'\n    \n    // Draw frequency labels\n    const numLabels = 5\n    for (let i = 0; i <= numLabels; i++) {\n      const x = (width / numLabels) * i\n      const freq = startFreq + (freqRange / numLabels) * i\n      const label = formatFrequency(freq)\n      \n      ctx.fillText(label, x, height - 5)\n    }\n    \n    // Draw time scale on the side\n    drawTimeScale()\n  }\n  \n  function drawTimeScale() {\n    if (!ctx) return\n    \n    ctx.fillStyle = 'rgba(0, 0, 0, 0.7)'\n    ctx.fillRect(width - 60, 0, 60, height)\n    \n    ctx.fillStyle = '#ffffff'\n    ctx.font = '10px monospace'\n    ctx.textAlign = 'right'\n    \n    const timeSteps = 5\n    for (let i = 0; i <= timeSteps; i++) {\n      const y = (height / timeSteps) * i\n      const seconds = (y / scrollSpeed) * 0.1 // Approximate time\n      ctx.fillText(`${seconds.toFixed(1)}s`, width - 5, y + 10)\n    }\n  }\n  \n  function formatFrequency(hz: number): string {\n    if (hz >= 1e9) {\n      return `${(hz / 1e9).toFixed(2)}G`\n    } else if (hz >= 1e6) {\n      return `${(hz / 1e6).toFixed(2)}M`\n    }\n    return `${(hz / 1e3).toFixed(0)}k`\n  }\n  \n  // Color map generation functions\n  function generateTurboColormap(): string[] {\n    const map: string[] = []\n    for (let i = 0; i < 256; i++) {\n      const t = i / 255\n      const r = Math.floor(255 * (t < 0.5 ? 4 * t : 1))\n      const g = Math.floor(255 * Math.sin(Math.PI * t))\n      const b = Math.floor(255 * (t > 0.5 ? 4 * (1 - t) : 1))\n      map.push(`rgb(${r}, ${g}, ${b})`)\n    }\n    return map\n  }\n  \n  function generateViridisColormap(): string[] {\n    const map: string[] = []\n    for (let i = 0; i < 256; i++) {\n      const t = i / 255\n      const r = Math.floor(255 * (0.267 + 0.004 * t + 0.329 * t * t))\n      const g = Math.floor(255 * (0.000 + 0.985 * t - 0.158 * t * t))\n      const b = Math.floor(255 * (0.330 + 0.458 * t - 0.788 * t * t))\n      map.push(`rgb(${r}, ${g}, ${b})`)\n    }\n    return map\n  }\n  \n  function generatePlasmaColormap(): string[] {\n    const map: string[] = []\n    for (let i = 0; i < 256; i++) {\n      const t = i / 255\n      const r = Math.floor(255 * (0.050 + 2.329 * t - 2.614 * t * t + 0.734 * t * t * t))\n      const g = Math.floor(255 * (0.020 + 0.129 * t + 0.863 * t * t - 0.331 * t * t * t))\n      const b = Math.floor(255 * (0.530 + 0.855 * t - 1.285 * t * t + 0.421 * t * t * t))\n      map.push(`rgb(${r}, ${g}, ${b})`)\n    }\n    return map\n  }\n  \n  function generateInfernoColormap(): string[] {\n    const map: string[] = []\n    for (let i = 0; i < 256; i++) {\n      const t = i / 255\n      const r = Math.floor(255 * (t < 0.5 ? 4 * t : 1))\n      const g = Math.floor(255 * (t < 0.5 ? 0 : 2 * (t - 0.5)))\n      const b = Math.floor(255 * (1 - t))\n      map.push(`rgb(${r}, ${g}, ${b})`)\n    }\n    return map\n  }\n</script>\n\n<div class=\"waterfall-display\">\n  <canvas\n    bind:this={canvas}\n    style=\"width: {width}px; height: {height}px;\"\n  />\n  \n  <div class=\"controls\">\n    <label>\n      Color Map:\n      <select bind:value={colormap}>\n        <option value=\"turbo\">Turbo</option>\n        <option value=\"viridis\">Viridis</option>\n        <option value=\"plasma\">Plasma</option>\n        <option value=\"inferno\">Inferno</option>\n      </select>\n    </label>\n    \n    <label>\n      Speed:\n      <input\n        type=\"range\"\n        bind:value={scrollSpeed}\n        min=\"1\"\n        max=\"5\"\n        step=\"1\"\n      />\n    </label>\n  </div>\n</div>\n\n<style>\n  .waterfall-display {\n    position: relative;\n    background: #000000;\n    border: 1px solid #333;\n    border-radius: 4px;\n    overflow: hidden;\n  }\n  \n  canvas {\n    display: block;\n  }\n  \n  .controls {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    display: flex;\n    gap: 10px;\n    padding: 5px 10px;\n    background: rgba(0, 0, 0, 0.8);\n    border-radius: 4px;\n    font-size: 12px;\n  }\n  \n  label {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    color: #ffffff;\n  }\n  \n  select, input[type=\"range\"] {\n    background: #1a1a1a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 2px 5px;\n    border-radius: 3px;\n  }\n  \n  input[type=\"range\"] {\n    width: 80px;\n  }\n</style>","<script lang=\"ts\">\n  import { hackrfStatus, updateHackRFConfig, isConnected } from '$lib/stores/websocket/hackrf'\n  import type { HackRFStatus } from '$lib/services/websocket/types'\n  \n  // Frequency presets\n  const frequencyPresets = [\n    { name: 'FM Radio', freq: 100e6, sampleRate: 2.4e6 },\n    { name: '2m Amateur', freq: 145e6, sampleRate: 2.4e6 },\n    { name: '70cm Amateur', freq: 435e6, sampleRate: 8e6 },\n    { name: 'ADS-B', freq: 1090e6, sampleRate: 2e6 },\n    { name: 'GPS L1', freq: 1575.42e6, sampleRate: 2.048e6 },\n    { name: 'WiFi 2.4GHz', freq: 2437e6, sampleRate: 20e6 },\n    { name: 'WiFi 5GHz', freq: 5180e6, sampleRate: 20e6 }\n  ]\n  \n  let frequencyInput = ''\n  let frequencyUnit = 'MHz'\n  let sampleRateInput = ''\n  let sampleRateUnit = 'MHz'\n  let gain = 20\n  let amplifierEnabled = false\n  \n  // Update inputs when status changes\n  $: if ($hackrfStatus) {\n    updateInputsFromStatus($hackrfStatus)\n  }\n  \n  function updateInputsFromStatus(status: HackRFStatus) {\n    // Convert frequency to appropriate unit\n    if (status.frequency >= 1e9) {\n      frequencyInput = (status.frequency / 1e9).toFixed(3)\n      frequencyUnit = 'GHz'\n    } else if (status.frequency >= 1e6) {\n      frequencyInput = (status.frequency / 1e6).toFixed(3)\n      frequencyUnit = 'MHz'\n    } else {\n      frequencyInput = (status.frequency / 1e3).toFixed(3)\n      frequencyUnit = 'kHz'\n    }\n    \n    // Convert sample rate to appropriate unit\n    if (status.sampleRate >= 1e6) {\n      sampleRateInput = (status.sampleRate / 1e6).toFixed(3)\n      sampleRateUnit = 'MHz'\n    } else {\n      sampleRateInput = (status.sampleRate / 1e3).toFixed(3)\n      sampleRateUnit = 'kHz'\n    }\n    \n    gain = status.gain\n    amplifierEnabled = status.amplifierEnabled\n  }\n  \n  function parseFrequency(value: string, unit: string): number {\n    const num = parseFloat(value)\n    if (isNaN(num)) return 0\n    \n    switch (unit) {\n      case 'GHz': return num * 1e9\n      case 'MHz': return num * 1e6\n      case 'kHz': return num * 1e3\n      default: return num\n    }\n  }\n  \n  function applySettings() {\n    if (!$isConnected) return\n    \n    const frequency = parseFrequency(frequencyInput, frequencyUnit)\n    const sampleRate = parseFrequency(sampleRateInput, sampleRateUnit)\n    \n    if (frequency > 0 && sampleRate > 0) {\n      updateHackRFConfig({\n        frequency,\n        sampleRate,\n        gain,\n        amplifierEnabled\n      })\n    }\n  }\n  \n  function applyPreset(preset: typeof frequencyPresets[0]) {\n    if (!$isConnected) return\n    \n    updateHackRFConfig({\n      frequency: preset.freq,\n      sampleRate: preset.sampleRate,\n      gain,\n      amplifierEnabled\n    })\n  }\n  \n  function handleKeyPress(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      applySettings()\n    }\n  }\n  \n  function stepFrequency(direction: number) {\n    const currentFreq = parseFrequency(frequencyInput, frequencyUnit)\n    const step = parseFrequency('1', frequencyUnit) * 0.1 // 100 kHz steps\n    const newFreq = currentFreq + (direction * step)\n    \n    updateHackRFConfig({\n      frequency: newFreq,\n      sampleRate: parseFrequency(sampleRateInput, sampleRateUnit),\n      gain,\n      amplifierEnabled\n    })\n  }\n</script>\n\n<div class=\"frequency-controls\">\n  <div class=\"control-section\">\n    <h3>Frequency Control</h3>\n    \n    <div class=\"frequency-input-group\">\n      <button \n        class=\"step-button\" \n        on:click={() => stepFrequency(-1)}\n        disabled={!$isConnected}\n      >\n        ◀\n      </button>\n      \n      <input\n        type=\"number\"\n        bind:value={frequencyInput}\n        on:keypress={handleKeyPress}\n        placeholder=\"Frequency\"\n        disabled={!$isConnected}\n        step=\"0.001\"\n      />\n      \n      <select bind:value={frequencyUnit}>\n        <option value=\"kHz\">kHz</option>\n        <option value=\"MHz\">MHz</option>\n        <option value=\"GHz\">GHz</option>\n      </select>\n      \n      <button \n        class=\"step-button\" \n        on:click={() => stepFrequency(1)}\n        disabled={!$isConnected}\n      >\n        ▶\n      </button>\n    </div>\n    \n    <div class=\"sample-rate-group\">\n      <label>\n        Sample Rate:\n        <input\n          type=\"number\"\n          bind:value={sampleRateInput}\n          on:keypress={handleKeyPress}\n          disabled={!$isConnected}\n          step=\"0.001\"\n        />\n        <select bind:value={sampleRateUnit}>\n          <option value=\"kHz\">kHz</option>\n          <option value=\"MHz\">MHz</option>\n        </select>\n      </label>\n    </div>\n  </div>\n  \n  <div class=\"control-section\">\n    <h3>Gain Control</h3>\n    \n    <div class=\"gain-controls\">\n      <label class=\"gain-slider\">\n        <span>VGA Gain: {gain} dB</span>\n        <input\n          type=\"range\"\n          bind:value={gain}\n          on:change={applySettings}\n          min=\"0\"\n          max=\"62\"\n          step=\"2\"\n          disabled={!$isConnected}\n        />\n      </label>\n      \n      <label class=\"amplifier-toggle\">\n        <input\n          type=\"checkbox\"\n          bind:checked={amplifierEnabled}\n          on:change={applySettings}\n          disabled={!$isConnected}\n        />\n        <span>14dB Amplifier</span>\n      </label>\n    </div>\n  </div>\n  \n  <div class=\"control-section\">\n    <h3>Frequency Presets</h3>\n    \n    <div class=\"presets\">\n      {#each frequencyPresets as preset}\n        <button\n          class=\"preset-button\"\n          on:click={() => applyPreset(preset)}\n          disabled={!$isConnected}\n        >\n          {preset.name}\n        </button>\n      {/each}\n    </div>\n  </div>\n  \n  <button \n    class=\"apply-button\"\n    on:click={applySettings}\n    disabled={!$isConnected}\n  >\n    Apply Settings\n  </button>\n</div>\n\n<style>\n  .frequency-controls {\n    background: #1a1a1a;\n    border: 1px solid #333;\n    border-radius: 8px;\n    padding: 20px;\n    color: #ffffff;\n  }\n  \n  .control-section {\n    margin-bottom: 20px;\n  }\n  \n  .control-section:last-child {\n    margin-bottom: 0;\n  }\n  \n  h3 {\n    margin: 0 0 15px 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: #00ff00;\n  }\n  \n  .frequency-input-group {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    margin-bottom: 15px;\n  }\n  \n  .step-button {\n    background: #2a2a2a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 8px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 16px;\n    transition: all 0.2s;\n  }\n  \n  .step-button:hover:not(:disabled) {\n    background: #3a3a3a;\n    border-color: #00ff00;\n  }\n  \n  .step-button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  \n  input[type=\"number\"] {\n    background: #2a2a2a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 8px 12px;\n    border-radius: 4px;\n    font-size: 14px;\n    width: 120px;\n  }\n  \n  input[type=\"number\"]:focus {\n    outline: none;\n    border-color: #00ff00;\n  }\n  \n  select {\n    background: #2a2a2a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 8px 12px;\n    border-radius: 4px;\n    font-size: 14px;\n    cursor: pointer;\n  }\n  \n  .sample-rate-group label {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n  }\n  \n  .gain-controls {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .gain-slider {\n    display: flex;\n    flex-direction: column;\n    gap: 5px;\n  }\n  \n  .gain-slider span {\n    font-size: 14px;\n    color: #888;\n  }\n  \n  input[type=\"range\"] {\n    width: 100%;\n    height: 6px;\n    background: #2a2a2a;\n    border-radius: 3px;\n    outline: none;\n    -webkit-appearance: none;\n  }\n  \n  input[type=\"range\"]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    appearance: none;\n    width: 18px;\n    height: 18px;\n    background: #00ff00;\n    border-radius: 50%;\n    cursor: pointer;\n  }\n  \n  input[type=\"range\"]::-moz-range-thumb {\n    width: 18px;\n    height: 18px;\n    background: #00ff00;\n    border-radius: 50%;\n    cursor: pointer;\n    border: none;\n  }\n  \n  .amplifier-toggle {\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    cursor: pointer;\n  }\n  \n  .amplifier-toggle input[type=\"checkbox\"] {\n    width: 18px;\n    height: 18px;\n    cursor: pointer;\n  }\n  \n  .presets {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    gap: 10px;\n  }\n  \n  .preset-button {\n    background: #2a2a2a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 8px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 12px;\n    transition: all 0.2s;\n  }\n  \n  .preset-button:hover:not(:disabled) {\n    background: #3a3a3a;\n    border-color: #00ff00;\n    color: #00ff00;\n  }\n  \n  .preset-button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  \n  .apply-button {\n    width: 100%;\n    background: #00ff00;\n    color: #000000;\n    border: none;\n    padding: 12px;\n    border-radius: 4px;\n    font-size: 16px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: all 0.2s;\n    margin-top: 20px;\n  }\n  \n  .apply-button:hover:not(:disabled) {\n    background: #00dd00;\n    transform: translateY(-1px);\n  }\n  \n  .apply-button:disabled {\n    background: #444;\n    color: #888;\n    cursor: not-allowed;\n    transform: none;\n  }\n</style>","<script lang=\"ts\">\n  import { onMount, onDestroy } from 'svelte'\n  import { spectrumData } from '$lib/stores/websocket/hackrf'\n  import type { SpectrumData } from '$lib/services/websocket/types'\n  \n  interface DetectedSignal {\n    id: string\n    frequency: number\n    strength: number\n    bandwidth: number\n    firstSeen: Date\n    lastSeen: Date\n    detectionCount: number\n    active: boolean\n  }\n  \n  export let threshold = -70 // dB threshold for detection\n  export let minBandwidth = 10e3 // Minimum bandwidth in Hz\n  export let maxSignals = 50 // Maximum number of signals to track\n  \n  let detectedSignals: Map<string, DetectedSignal> = new Map()\n  let signalsList: DetectedSignal[] = []\n  let sortBy: 'frequency' | 'strength' | 'bandwidth' | 'lastSeen' = 'strength'\n  let sortDescending = true\n  let autoScroll = true\n  let selectedSignal: DetectedSignal | null = null\n  \n  // Signal detection parameters\n  const SIGNAL_TIMEOUT = 5000 // Mark signal as inactive after 5 seconds\n  const CLEANUP_INTERVAL = 10000 // Clean up old signals every 10 seconds\n  \n  let cleanupTimer: number\n  \n  onMount(() => {\n    // Start cleanup timer\n    cleanupTimer = setInterval(cleanupSignals, CLEANUP_INTERVAL)\n  })\n  \n  onDestroy(() => {\n    if (cleanupTimer) {\n      clearInterval(cleanupTimer)\n    }\n  })\n  \n  // Process spectrum data for signal detection\n  $: if ($spectrumData) {\n    detectSignals($spectrumData)\n  }\n  \n  // Sort signals when sort criteria changes\n  $: signalsList = Array.from(detectedSignals.values()).sort((a, b) => {\n    let comparison = 0\n    \n    switch (sortBy) {\n      case 'frequency':\n        comparison = a.frequency - b.frequency\n        break\n      case 'strength':\n        comparison = a.strength - b.strength\n        break\n      case 'bandwidth':\n        comparison = a.bandwidth - b.bandwidth\n        break\n      case 'lastSeen':\n        comparison = a.lastSeen.getTime() - b.lastSeen.getTime()\n        break\n    }\n    \n    return sortDescending ? -comparison : comparison\n  })\n  \n  function detectSignals(data: SpectrumData) {\n    if (!data.magnitude || data.magnitude.length === 0) return\n    \n    const magnitudes = data.magnitude\n    const binWidth = data.sampleRate / magnitudes.length\n    const startFreq = data.centerFrequency - data.sampleRate / 2\n    \n    // Find signals above threshold\n    let inSignal = false\n    let signalStart = 0\n    let signalPeak = -Infinity\n    let signalSum = 0\n    let signalBins = 0\n    \n    for (let i = 0; i < magnitudes.length; i++) {\n      const magnitude = magnitudes[i]\n      \n      if (magnitude >= threshold && !inSignal) {\n        // Start of signal\n        inSignal = true\n        signalStart = i\n        signalPeak = magnitude\n        signalSum = magnitude\n        signalBins = 1\n      } else if (magnitude >= threshold && inSignal) {\n        // Continue signal\n        signalPeak = Math.max(signalPeak, magnitude)\n        signalSum += magnitude\n        signalBins++\n      } else if (magnitude < threshold && inSignal) {\n        // End of signal\n        inSignal = false\n        \n        const bandwidth = signalBins * binWidth\n        if (bandwidth >= minBandwidth) {\n          const centerBin = signalStart + Math.floor(signalBins / 2)\n          const frequency = startFreq + centerBin * binWidth\n          const avgStrength = signalSum / signalBins\n          \n          updateSignal(frequency, signalPeak, bandwidth)\n        }\n      }\n    }\n    \n    // Handle signal that extends to the end\n    if (inSignal) {\n      const bandwidth = signalBins * binWidth\n      if (bandwidth >= minBandwidth) {\n        const centerBin = signalStart + Math.floor(signalBins / 2)\n        const frequency = startFreq + centerBin * binWidth\n        const avgStrength = signalSum / signalBins\n        \n        updateSignal(frequency, signalPeak, bandwidth)\n      }\n    }\n    \n    // Mark inactive signals\n    const now = Date.now()\n    detectedSignals.forEach((signal) => {\n      if (now - signal.lastSeen.getTime() > SIGNAL_TIMEOUT) {\n        signal.active = false\n      }\n    })\n  }\n  \n  function updateSignal(frequency: number, strength: number, bandwidth: number) {\n    const id = `${Math.round(frequency / 1000)}` // Round to nearest kHz for ID\n    const now = new Date()\n    \n    if (detectedSignals.has(id)) {\n      // Update existing signal\n      const signal = detectedSignals.get(id)!\n      signal.frequency = frequency\n      signal.strength = strength\n      signal.bandwidth = bandwidth\n      signal.lastSeen = now\n      signal.detectionCount++\n      signal.active = true\n    } else {\n      // Add new signal\n      if (detectedSignals.size < maxSignals) {\n        detectedSignals.set(id, {\n          id,\n          frequency,\n          strength,\n          bandwidth,\n          firstSeen: now,\n          lastSeen: now,\n          detectionCount: 1,\n          active: true\n        })\n      }\n    }\n    \n    // Trigger reactivity\n    detectedSignals = detectedSignals\n  }\n  \n  function cleanupSignals() {\n    const now = Date.now()\n    const timeout = 60000 // Remove signals not seen for 1 minute\n    \n    detectedSignals.forEach((signal, id) => {\n      if (now - signal.lastSeen.getTime() > timeout) {\n        detectedSignals.delete(id)\n      }\n    })\n    \n    // Trigger reactivity\n    detectedSignals = detectedSignals\n  }\n  \n  function clearSignals() {\n    detectedSignals.clear()\n    detectedSignals = detectedSignals\n    selectedSignal = null\n  }\n  \n  function selectSignal(signal: DetectedSignal) {\n    selectedSignal = signal\n    \n    // TODO: Emit event to tune to this frequency\n    // updateHackRFConfig({ frequency: signal.frequency })\n  }\n  \n  function formatFrequency(hz: number): string {\n    if (hz >= 1e9) {\n      return `${(hz / 1e9).toFixed(6)} GHz`\n    } else if (hz >= 1e6) {\n      return `${(hz / 1e6).toFixed(6)} MHz`\n    } else if (hz >= 1e3) {\n      return `${(hz / 1e3).toFixed(3)} kHz`\n    }\n    return `${hz.toFixed(0)} Hz`\n  }\n  \n  function formatBandwidth(hz: number): string {\n    if (hz >= 1e6) {\n      return `${(hz / 1e6).toFixed(2)} MHz`\n    } else if (hz >= 1e3) {\n      return `${(hz / 1e3).toFixed(1)} kHz`\n    }\n    return `${hz.toFixed(0)} Hz`\n  }\n  \n  function formatDuration(ms: number): string {\n    if (ms < 1000) {\n      return `${ms}ms`\n    } else if (ms < 60000) {\n      return `${(ms / 1000).toFixed(1)}s`\n    } else {\n      return `${Math.floor(ms / 60000)}m ${Math.floor((ms % 60000) / 1000)}s`\n    }\n  }\n</script>\n\n<div class=\"signal-detection-list\">\n  <div class=\"header\">\n    <h3>Detected Signals ({signalsList.length})</h3>\n    <div class=\"controls\">\n      <label>\n        Threshold:\n        <input\n          type=\"number\"\n          bind:value={threshold}\n          min=\"-120\"\n          max=\"-20\"\n          step=\"5\"\n        /> dB\n      </label>\n      \n      <label>\n        <input\n          type=\"checkbox\"\n          bind:checked={autoScroll}\n        />\n        Auto-scroll\n      </label>\n      \n      <button on:click={clearSignals}>Clear All</button>\n    </div>\n  </div>\n  \n  <div class=\"sort-controls\">\n    <button\n      class=\"sort-button\"\n      class:active={sortBy === 'frequency'}\n      on:click={() => { sortBy = 'frequency'; sortDescending = !sortDescending }}\n    >\n      Frequency {#if sortBy === 'frequency'}{sortDescending ? '▼' : '▲'}{/if}\n    </button>\n    \n    <button\n      class=\"sort-button\"\n      class:active={sortBy === 'strength'}\n      on:click={() => { sortBy = 'strength'; sortDescending = !sortDescending }}\n    >\n      Strength {#if sortBy === 'strength'}{sortDescending ? '▼' : '▲'}{/if}\n    </button>\n    \n    <button\n      class=\"sort-button\"\n      class:active={sortBy === 'bandwidth'}\n      on:click={() => { sortBy = 'bandwidth'; sortDescending = !sortDescending }}\n    >\n      Bandwidth {#if sortBy === 'bandwidth'}{sortDescending ? '▼' : '▲'}{/if}\n    </button>\n    \n    <button\n      class=\"sort-button\"\n      class:active={sortBy === 'lastSeen'}\n      on:click={() => { sortBy = 'lastSeen'; sortDescending = !sortDescending }}\n    >\n      Last Seen {#if sortBy === 'lastSeen'}{sortDescending ? '▼' : '▲'}{/if}\n    </button>\n  </div>\n  \n  <div class=\"signal-list\" class:auto-scroll={autoScroll}>\n    {#each signalsList as signal (signal.id)}\n      <div\n        class=\"signal-item\"\n        class:active={signal.active}\n        class:selected={selectedSignal?.id === signal.id}\n        on:click={() => selectSignal(signal)}\n      >\n        <div class=\"signal-status\" class:active={signal.active} />\n        \n        <div class=\"signal-info\">\n          <div class=\"frequency\">{formatFrequency(signal.frequency)}</div>\n          <div class=\"details\">\n            <span class=\"strength\">{signal.strength.toFixed(1)} dB</span>\n            <span class=\"bandwidth\">{formatBandwidth(signal.bandwidth)}</span>\n            <span class=\"count\">×{signal.detectionCount}</span>\n          </div>\n        </div>\n        \n        <div class=\"signal-time\">\n          <div class=\"duration\">\n            {formatDuration(signal.lastSeen.getTime() - signal.firstSeen.getTime())}\n          </div>\n          <div class=\"last-seen\">\n            {signal.active ? 'Active' : formatDuration(Date.now() - signal.lastSeen.getTime()) + ' ago'}\n          </div>\n        </div>\n      </div>\n    {/each}\n    \n    {#if signalsList.length === 0}\n      <div class=\"empty-state\">\n        No signals detected above {threshold} dB\n      </div>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .signal-detection-list {\n    background: #1a1a1a;\n    border: 1px solid #333;\n    border-radius: 8px;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    color: #ffffff;\n  }\n  \n  .header {\n    padding: 15px 20px;\n    border-bottom: 1px solid #333;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .header h3 {\n    margin: 0;\n    font-size: 16px;\n    font-weight: 600;\n    color: #00ff00;\n  }\n  \n  .controls {\n    display: flex;\n    gap: 15px;\n    align-items: center;\n  }\n  \n  .controls label {\n    display: flex;\n    align-items: center;\n    gap: 5px;\n    font-size: 12px;\n  }\n  \n  .controls input[type=\"number\"] {\n    width: 60px;\n    background: #2a2a2a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 4px 8px;\n    border-radius: 4px;\n    font-size: 12px;\n  }\n  \n  .controls button {\n    background: #2a2a2a;\n    border: 1px solid #444;\n    color: #ffffff;\n    padding: 4px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    font-size: 12px;\n    transition: all 0.2s;\n  }\n  \n  .controls button:hover {\n    background: #3a3a3a;\n    border-color: #00ff00;\n  }\n  \n  .sort-controls {\n    display: flex;\n    border-bottom: 1px solid #333;\n  }\n  \n  .sort-button {\n    flex: 1;\n    background: #2a2a2a;\n    border: none;\n    border-right: 1px solid #333;\n    color: #888;\n    padding: 8px;\n    cursor: pointer;\n    font-size: 12px;\n    transition: all 0.2s;\n  }\n  \n  .sort-button:last-child {\n    border-right: none;\n  }\n  \n  .sort-button:hover {\n    background: #3a3a3a;\n    color: #ffffff;\n  }\n  \n  .sort-button.active {\n    background: #3a3a3a;\n    color: #00ff00;\n  }\n  \n  .signal-list {\n    flex: 1;\n    overflow-y: auto;\n    padding: 10px;\n  }\n  \n  .signal-list.auto-scroll {\n    scroll-behavior: smooth;\n  }\n  \n  .signal-item {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    padding: 12px 15px;\n    background: #2a2a2a;\n    border: 1px solid #333;\n    border-radius: 6px;\n    margin-bottom: 8px;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n  \n  .signal-item:hover {\n    background: #3a3a3a;\n    border-color: #444;\n  }\n  \n  .signal-item.selected {\n    background: #3a3a3a;\n    border-color: #00ff00;\n  }\n  \n  .signal-item.active {\n    border-color: #00ff00;\n  }\n  \n  .signal-status {\n    width: 10px;\n    height: 10px;\n    border-radius: 50%;\n    background: #444;\n    transition: all 0.3s;\n  }\n  \n  .signal-status.active {\n    background: #00ff00;\n    box-shadow: 0 0 10px #00ff00;\n    animation: pulse 2s infinite;\n  }\n  \n  @keyframes pulse {\n    0% { opacity: 1; }\n    50% { opacity: 0.5; }\n    100% { opacity: 1; }\n  }\n  \n  .signal-info {\n    flex: 1;\n  }\n  \n  .frequency {\n    font-size: 14px;\n    font-weight: 600;\n    margin-bottom: 4px;\n  }\n  \n  .details {\n    display: flex;\n    gap: 15px;\n    font-size: 12px;\n    color: #888;\n  }\n  \n  .strength {\n    color: #ffaa00;\n  }\n  \n  .bandwidth {\n    color: #00aaff;\n  }\n  \n  .count {\n    color: #ff00ff;\n  }\n  \n  .signal-time {\n    text-align: right;\n    font-size: 11px;\n    color: #666;\n  }\n  \n  .duration {\n    margin-bottom: 2px;\n  }\n  \n  .empty-state {\n    text-align: center;\n    padding: 40px;\n    color: #666;\n    font-size: 14px;\n  }\n  \n  /* Scrollbar styling */\n  .signal-list::-webkit-scrollbar {\n    width: 8px;\n  }\n  \n  .signal-list::-webkit-scrollbar-track {\n    background: #1a1a1a;\n  }\n  \n  .signal-list::-webkit-scrollbar-thumb {\n    background: #444;\n    border-radius: 4px;\n  }\n  \n  .signal-list::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n</style>","<script lang=\"ts\">\n  import { onMount } from 'svelte';\n  import { Button, Card, Panel, StatusIndicator, GridLayout, ThemeToggle, ResizablePanel } from '$lib/components/ui';\n  import { \n    SpectrumDisplay, \n    WaterfallDisplay, \n    FrequencyControls, \n    SignalDetectionList \n  } from './components';\n  import { \n    connectHackRF, \n    disconnectHackRF, \n    isConnected, \n    hackrfStatus,\n    connectionState\n  } from '$lib/stores/websocket/hackrf';\n  \n  let displayMode: 'spectrum' | 'waterfall' | 'both' = 'both';\n  let spectrumContainer: HTMLDivElement;\n  let waterfallContainer: HTMLDivElement;\n  let spectrumWidth = 800;\n  let spectrumHeight = 300;\n  let waterfallWidth = 800;\n  let waterfallHeight = 300;\n  \n  onMount(() => {\n    // Auto-connect on mount\n    connectHackRF();\n    \n    // Handle window resize\n    const handleResize = () => {\n      if (spectrumContainer) {\n        spectrumWidth = spectrumContainer.clientWidth - 20;\n        spectrumHeight = displayMode === 'both' ? 300 : 500;\n      }\n      if (waterfallContainer) {\n        waterfallWidth = waterfallContainer.clientWidth - 20;\n        waterfallHeight = displayMode === 'both' ? 300 : 500;\n      }\n    };\n    \n    handleResize();\n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      // Cleanup on unmount\n      disconnectHackRF();\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n  \n  function toggleConnection() {\n    if ($isConnected) {\n      disconnectHackRF();\n    } else {\n      connectHackRF();\n    }\n  }\n</script>\n\n<div class=\"min-h-screen bg-surface-50 dark:bg-surface-900\">\n  <!-- Header -->\n  <header class=\"bg-surface-100 dark:bg-surface-800 border-b border-surface-200 dark:border-surface-700\">\n    <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n      <div class=\"flex justify-between items-center h-16\">\n        <h1 class=\"text-xl font-semibold text-surface-900 dark:text-surface-100\">\n          HackRF SDR Dashboard\n        </h1>\n        <div class=\"flex items-center gap-4\">\n          <StatusIndicator \n            status={$isConnected ? 'online' : $connectionState.connecting ? 'warning' : 'offline'} \n            showLabel={true}\n            label={$isConnected ? 'Connected' : $connectionState.connecting ? 'Connecting...' : 'Disconnected'}\n          />\n          <ThemeToggle variant=\"dropdown\" />\n        </div>\n      </div>\n    </div>\n  </header>\n\n  <!-- Main Content -->\n  <main class=\"flex flex-col h-[calc(100vh-4rem)]\">\n    <div class=\"flex-1 flex gap-4 p-4 overflow-hidden\">\n      <!-- Left Panel: Controls and Signal Detection -->\n      <div class=\"w-96 flex flex-col gap-4\">\n        <!-- Connection Control -->\n        <Card variant=\"elevated\" padding=\"sm\">\n          <Button \n            variant={$isConnected ? 'danger' : 'primary'}\n            onclick={toggleConnection}\n            class=\"w-full\"\n            disabled={$connectionState.connecting}\n          >\n            {$isConnected ? 'Disconnect' : $connectionState.connecting ? 'Connecting...' : 'Connect to HackRF'}\n          </Button>\n        </Card>\n        \n        <!-- Frequency Controls -->\n        <FrequencyControls />\n        \n        <!-- Signal Detection List -->\n        <div class=\"flex-1 min-h-0\">\n          <SignalDetectionList />\n        </div>\n      </div>\n      \n      <!-- Right Panel: Spectrum Visualization -->\n      <div class=\"flex-1 flex flex-col gap-4\">\n        <!-- Display Mode Selector -->\n        <Card variant=\"bordered\" padding=\"sm\">\n          <div class=\"flex items-center justify-between\">\n            <h2 class=\"text-lg font-semibold\">Spectrum Display</h2>\n            <div class=\"flex gap-2\">\n              <Button\n                variant={displayMode === 'spectrum' ? 'primary' : 'ghost'}\n                size=\"sm\"\n                onclick={() => displayMode = 'spectrum'}\n              >\n                Spectrum\n              </Button>\n              <Button\n                variant={displayMode === 'waterfall' ? 'primary' : 'ghost'}\n                size=\"sm\"\n                onclick={() => displayMode = 'waterfall'}\n              >\n                Waterfall\n              </Button>\n              <Button\n                variant={displayMode === 'both' ? 'primary' : 'ghost'}\n                size=\"sm\"\n                onclick={() => displayMode = 'both'}\n              >\n                Both\n              </Button>\n            </div>\n          </div>\n        </Card>\n        \n        <!-- Spectrum Displays -->\n        {#if displayMode === 'spectrum' || displayMode === 'both'}\n          <div class=\"flex-1 min-h-0\" bind:this={spectrumContainer}>\n            <SpectrumDisplay width={spectrumWidth} height={spectrumHeight} />\n          </div>\n        {/if}\n        \n        {#if displayMode === 'waterfall' || displayMode === 'both'}\n          <div class=\"flex-1 min-h-0\" bind:this={waterfallContainer}>\n            <WaterfallDisplay width={waterfallWidth} height={waterfallHeight} />\n          </div>\n        {/if}\n        \n        <!-- Status Bar -->\n        {#if $hackrfStatus}\n          <Card variant=\"bordered\" padding=\"sm\">\n            <div class=\"flex items-center justify-between text-sm\">\n              <div class=\"flex gap-6\">\n                <span>Frequency: <strong>{($hackrfStatus.frequency / 1e6).toFixed(3)} MHz</strong></span>\n                <span>Sample Rate: <strong>{($hackrfStatus.sampleRate / 1e6).toFixed(3)} MS/s</strong></span>\n                <span>Gain: <strong>{$hackrfStatus.gain} dB</strong></span>\n                <span>Amplifier: <strong>{$hackrfStatus.amplifierEnabled ? 'ON' : 'OFF'}</strong></span>\n              </div>\n              {#if $connectionState.error}\n                <span class=\"text-danger-600 dark:text-danger-400\">\n                  Error: {$connectionState.error.message}\n                </span>\n              {/if}\n            </div>\n          </Card>\n        {/if}\n      </div>\n    </div>\n  </main>\n</div>\n\n<style>\n  :global(html, body) {\n    height: 100%;\n    overflow: hidden;\n  }\n  \n  :global(#app) {\n    height: 100%;\n  }\n</style>\n\n","import '$shared/app.css'\nimport App from './App.svelte'\n\nconst app = new App({\n  target: document.getElementById('app')!,\n})\n\nexport default app"],"names":["PUBLIC_VERSION","enable_legacy_mode_flag","variant","size","disabled","className","restProps","$.rest_props","$$props","variantClasses","sizeClasses","baseClasses","buttonClasses","$.derived","padding","paddingClasses","cardClasses","$.attribute_effect","div","$.get","showLabel","label","pulse","statusColors","statusLabels","displayLabel","shouldPulse","$$render","consequent","classes","$0","getInitialTheme","stored","theme","writable","value","updateDocumentTheme","derived","$theme","e","currentTheme","selectTheme","themeOption","showDropdown","themes","cycleTheme","current","nextIndex","t","newTheme","$.set","$.template_effect","$.set_text","text_1","text","text_3","consequent_2","text_2","$.each","div_2","text_4","text_5","consequent_3","consequent_1","alternate","WebSocketClient","config","events","io","error","type","payload","message","event","data","handler","reason","attempt","HACKRF_PORT","WIGLE_PORT","KISMET_PORT","buildServiceUrl","port","protocol","location","host","apiConfig","getWebSocketUrl","service","connectionState","spectrumData","hackrfStatus","signalHistory","wsClient","connectHackRF","url","wsUrl","state","handleHackRFMessage","disconnectHackRF","spectrum","history","updateHackRFConfig","isConnected","$state","width","height","minDb","maxDb","gridLines","smoothing","canvas","$.mutable_source","ctx","animationFrameId","previousMagnitudes","backgroundColor","gridColor","spectrumColor","peakHoldColor","textColor","peakHold","peakHoldDecay","onMount","dpr","$.mutate","render","onDestroy","drawGrid","$spectrumData","drawSpectrum","drawFrequencyLabels","dbStep","db","y","dbToY","freqDivisions","i","x","magnitudes","binWidth","startFreq","freqRange","numLabels","freq","formatFrequency","textWidth","normalized","hz","$.bind_this","canvas_1","$$value","$.set_style","colormap","scrollSpeed","offscreenCanvas","offscreenCtx","colormaps","generateViridisColormap","generatePlasmaColormap","generateInfernoColormap","generateTurboColormap","updateWaterfall","imageData","colorMap","colorIndex","color","drawFrequencyScale","drawTimeScale","timeSteps","seconds","map","r","g","b","frequencyPresets","frequencyInput","frequencyUnit","sampleRateInput","sampleRateUnit","gain","amplifierEnabled","updateInputsFromStatus","status","parseFrequency","unit","num","applySettings","$isConnected","frequency","sampleRate","applyPreset","preset","handleKeyPress","stepFrequency","direction","currentFreq","step","newFreq","$hackrfStatus","div_7","$.untrack","$.event","button_2","button","$.bind_value","input","$.bind_select_value","select","button_1","input_1","select_1","input_2","$.bind_checked","input_3","threshold","minBandwidth","maxSignals","detectedSignals","signalsList","sortBy","sortDescending","autoScroll","selectedSignal","SIGNAL_TIMEOUT","CLEANUP_INTERVAL","cleanupTimer","cleanupSignals","detectSignals","inSignal","signalStart","signalPeak","signalBins","magnitude","bandwidth","centerBin","updateSignal","now","signal","strength","id","timeout","clearSignals","selectSignal","formatBandwidth","formatDuration","ms","a","comparison","node_4","div_5","displayMode","spectrumContainer","waterfallContainer","spectrumWidth","spectrumHeight","waterfallWidth","waterfallHeight","handleResize","toggleConnection","$connectionState","expression_3","$.derived_safe_equal","expression_4","expression_5","div_10","div_11","App"],"mappings":"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","x_google_ignoreList":[0,1,2]}