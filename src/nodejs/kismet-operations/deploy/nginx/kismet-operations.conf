# Nginx configuration for Kismet Operations Center
# Provides reverse proxy, SSL termination, and caching

# Upstream configuration with health checks
upstream kismet_operations {
    server 127.0.0.1:3001 fail_timeout=5s max_fails=3;
    keepalive 32;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=kismet_api:10m rate=30r/s;
limit_req_zone $binary_remote_addr zone=kismet_websocket:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=kismet_conn:10m;

# Cache configuration
proxy_cache_path /var/cache/nginx/kismet_operations 
    levels=1:2 
    keys_zone=kismet_cache:10m 
    max_size=100m 
    inactive=60m 
    use_temp_path=off;

# Main server block - HTTP to HTTPS redirect
server {
    listen 80;
    listen [::]:80;
    server_name kismet.local kismet.yourdomain.com;
    
    # Let's Encrypt challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server block
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name kismet.local kismet.yourdomain.com;
    
    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/kismet.yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kismet.yourdomain.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/kismet.yourdomain.com/chain.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://unpkg.com https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://unpkg.com https://cdn.jsdelivr.net; img-src 'self' data: https:; connect-src 'self' wss: https:;" always;
    
    # Logging
    access_log /var/log/nginx/kismet-operations-access.log combined buffer=16k;
    error_log /var/log/nginx/kismet-operations-error.log warn;
    
    # Connection limits
    limit_conn kismet_conn 50;
    
    # Root location
    location / {
        # Rate limiting
        limit_req zone=kismet_api burst=20 nodelay;
        
        proxy_pass http://kismet_operations;
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Connection settings
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Disable buffering for SSE
        proxy_buffering off;
        proxy_cache off;
        
        # Keep-alive
        proxy_set_header Connection "";
    }
    
    # WebSocket endpoints
    location ~ ^/(socket\.io|ws) {
        # Rate limiting for WebSocket
        limit_req zone=kismet_websocket burst=5 nodelay;
        
        proxy_pass http://kismet_operations;
        proxy_http_version 1.1;
        
        # WebSocket headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket timeouts
        proxy_connect_timeout 7d;
        proxy_send_timeout 7d;
        proxy_read_timeout 7d;
        
        # Disable buffering
        proxy_buffering off;
    }
    
    # API endpoints with caching
    location /api/ {
        # Rate limiting
        limit_req zone=kismet_api burst=30 nodelay;
        
        proxy_pass http://kismet_operations;
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Caching for GET requests
        proxy_cache kismet_cache;
        proxy_cache_methods GET HEAD;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_cache_control;
        proxy_no_cache $http_cache_control;
        add_header X-Cache-Status $upstream_cache_status;
        
        # Keep-alive
        proxy_set_header Connection "";
    }
    
    # Health check endpoint (no rate limiting)
    location = /api/health {
        proxy_pass http://kismet_operations;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        access_log off;
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://kismet_operations;
        proxy_http_version 1.1;
        
        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # Aggressive caching
        proxy_cache kismet_cache;
        proxy_cache_valid 200 30d;
        proxy_cache_key "$scheme$request_method$host$request_uri";
        add_header Cache-Control "public, max-age=2592000, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        # Compression
        gzip on;
        gzip_vary on;
        gzip_comp_level 6;
        gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
        
        # Keep-alive
        proxy_set_header Connection "";
    }
    
    # Monitoring endpoint for external services
    location /nginx-status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # Custom error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Development/staging server (optional)
server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    server_name kismet-dev.local;
    
    # Use self-signed cert for development
    ssl_certificate /etc/nginx/ssl/kismet-dev.crt;
    ssl_certificate_key /etc/nginx/ssl/kismet-dev.key;
    
    # Same configuration as production but pointing to staging
    location / {
        proxy_pass http://127.0.0.1:3002;  # Different port for staging
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}